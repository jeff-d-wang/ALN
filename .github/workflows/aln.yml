name: Automatic Lab Notebook Generator

on:
  push:
    branches:
      - main
    paths:
      - '**.ipynb'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository with fetch-depth 2
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -q nbconvert
          pip install -q -U google-genai
          pip install -q pytz

      - name: Extract current and previous .ipynb files
        id: extract-ipynbs
        run: |
          mkdir -p prev_notebooks
          INPUT_ARGS=""

          CURRENT_COMMIT=$(git rev-parse HEAD)
          CURRENT_COMMIT_MSG=$(git log -1 --pretty=%s)
          CURRENT_AUTHOR=$(git log -1 --pretty=%an)

          echo "ðŸŸ¢ Current Commit:"
          echo "Hash: $CURRENT_COMMIT"
          echo "Author: $CURRENT_AUTHOR"
          echo "Message: $CURRENT_COMMIT_MSG"
          echo ""

          TRUE_PREV_COMMIT=""
          for COMMIT in $(git rev-list HEAD); do
            # Skip the current commit
            if [ "$COMMIT" = "$CURRENT_COMMIT" ]; then
              continue
            fi

            AUTHOR=$(git show -s --format='%an' "$COMMIT")

            # Skip bot commits
            if [ "$AUTHOR" = "github-actions[bot]" ]; then
              continue
            fi

            echo "ðŸ”¸ Checking commit: $COMMIT by $AUTHOR"
            # Only consider commits with .ipynb changes
            if git diff-tree --no-commit-id --name-only -r "$COMMIT" | grep '\.ipynb'; then
              TRUE_PREV_COMMIT="$COMMIT"
              break
            else
              echo "ðŸ”¸ Skipping $COMMIT â€” no .ipynb changes"
            fi
          done

          echo "ðŸ”µ True Previous Commit (non-bot): $TRUE_PREV_COMMIT"
          if [ -z "$TRUE_PREV_COMMIT" ]; then
            echo "Previous human-made commit not found; skipping ALN."
            exit 0
          fi
          
          TRUE_PREV_COMMIT_MSG=$(git log -1 --pretty=%s $TRUE_PREV_COMMIT)
          TRUE_PREV_AUTHOR=$(git log -1 --pretty=%an $TRUE_PREV_COMMIT)

          echo "ðŸ”µ True Previous Commit (non-bot):"
          echo "Hash: $TRUE_PREV_COMMIT"
          echo "Author: $TRUE_PREV_AUTHOR"
          echo "Message: $TRUE_PREV_COMMIT_MSG"
          echo ""

          for CURR_PATH in $(find . -maxdepth 1 -name "*.ipynb"); do
            CURR_NAME=$(basename "$CURR_PATH")

            echo "Found current notebook: $CURR_NAME"

            if git show "$TRUE_PREV_COMMIT":"$CURR_NAME" > "prev_notebooks/$CURR_NAME"; then
              echo "Recovered previous version of $CURR_NAME"
              INPUT_ARGS+=" prev_notebooks/$CURR_NAME $CURR_PATH"
            else
              echo "Previous version of $CURR_NAME not found; notebook is newly created."
              INPUT_ARGS+=" None $CURR_PATH"
            fi
          done

          echo "FINAL_INPUT_ARGS=$INPUT_ARGS" >> $GITHUB_ENV

      - name: Execute ALN Python script and generate log
        run: |
          if [ -z "$FINAL_INPUT_ARGS" ]; then
            echo "No input notebook pairs found; skipping ALN."
            exit 0
          fi

          echo "Running script_summarize_changes.py with inputs: $FINAL_INPUT_ARGS"
          mkdir -p aln_output
          python .github/workflows/script_summarize_changes.py --input $FINAL_INPUT_ARGS --output ./aln_output/aln_output.md
          python .github/workflows/script_provide_suggestions.py ./aln_output/aln_output.md ./aln_output/aln_suggestions.md

      - name: Upload aln_output as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: aln_output
          path: aln_output/
          overwrite: true

      - name: Commit aln_output
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add aln_output/
          git commit -m "Generated aln_output from workflow"
          git push
        continue-on-error: true